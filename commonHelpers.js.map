{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst textInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\n\nlet userSelectedDate;\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    timer.initTime = selectedDates[0].getTime();\n    if (timer.initTime <= Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(textInput, options);\n\nconst timer = {\n  initTime: 0,\n  start(){\nconst id = setInterval(() => {\n  const different = this.initTime - Date.now();\n  const timeObj = convertMs(different);\n  render(timeObj);\n  if (different < 1000){\n    clearInterval(id);\n  }\n}, 1000)\n  },\n}\n\nstartBtn.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(){\n  timer.start();\n  startBtn.disabled = true;\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst days = document.querySelector('[data-days]');\n  // Remaining hours\n  const hours =document.querySelector('[data-hours]');\n  // Remaining minutes\n  const minutes = document.querySelector('[data-minutes]');\n  // Remaining seconds\n  const seconds = document.querySelector('[data-seconds]');\n\n\nfunction render(timeObj){\ndays.textContent = timeObj.days.toString().padStart(2, 0);\nhours.textContent = timeObj.hours.toString().padStart(2, 0);;\nminutes.textContent = timeObj.minutes.toString().padStart(2, 0);;\nseconds.textContent = timeObj.seconds.toString().padStart(2, 0);;\n}"],"names":["textInput","startBtn","options","selectedDates","timer","iziToast","flatpickr","id","different","timeObj","convertMs","render","onBtnClick","ms","days","hours","minutes","seconds"],"mappings":"+IAOA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,oBAAoB,EAG5DA,EAAS,SAAW,GAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrBC,EAAM,SAAWD,EAAc,CAAC,EAAE,QAAO,EACrCC,EAAM,UAAY,KAAK,IAAG,EAC5BC,EAAS,KAAK,CACZ,QAAS,oCACjB,CAAO,EAEDJ,EAAS,SAAW,EAEvB,CACH,EAEAK,EAAUN,EAAWE,CAAO,EAE5B,MAAME,EAAQ,CACZ,SAAU,EACV,OAAO,CACT,MAAMG,EAAK,YAAY,IAAM,CAC3B,MAAMC,EAAY,KAAK,SAAW,KAAK,IAAG,EACpCC,EAAUC,EAAUF,CAAS,EACnCG,EAAOF,CAAO,EACVD,EAAY,KACd,cAAcD,CAAE,CAEpB,EAAG,GAAI,CACJ,CACH,EAEAN,EAAS,iBAAiB,QAASW,CAAU,EAE7C,SAASA,GAAY,CACnBR,EAAM,MAAK,EACXH,EAAS,SAAW,EACtB,CAEA,SAASS,EAAUG,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMH,EAAO,SAAS,cAAc,aAAa,EAEzCC,EAAO,SAAS,cAAc,cAAc,EAE5CC,EAAU,SAAS,cAAc,gBAAgB,EAEjDC,EAAU,SAAS,cAAc,gBAAgB,EAGzD,SAASN,EAAOF,EAAQ,CACxBK,EAAK,YAAcL,EAAQ,KAAK,SAAU,EAAC,SAAS,EAAG,CAAC,EACxDM,EAAM,YAAcN,EAAQ,MAAM,SAAU,EAAC,SAAS,EAAG,CAAC,EAC1DO,EAAQ,YAAcP,EAAQ,QAAQ,WAAW,SAAS,EAAG,CAAC,EAC9DQ,EAAQ,YAAcR,EAAQ,QAAQ,SAAQ,EAAG,SAAS,EAAG,CAAC,CAC9D"}